/*  Box-Sizing: Border-Box */
* {
  box-sizing: border-box;
}

/* website styling configuration */
:root {
  /*color styling */
  --primary-text-color: #000;
  --primary-bg-color: #bfbfbf;
  --navbar-bg-color: #2b2b2b;
  --navbar-link-color: #fff;
  --navbar-link-active-color: yellow;
  --primary-link-color: blue;
  --secondary-link-color_1: #fff;
  --link-active-color: #489c79;
  --button_1-bg-color: #357b70;
  --button_1-text-color: #fff;
  --button_2-bg-color: #e0b354;
  --button_2-text-color: #2b2b2b;
  --img-color-1: #edc655;
  --img-color-2: #fcffad;
  --img-color-3: #f76414;
  --project-bg-color: #cecece;
  --footer-bg-color: #dcdcdc;

  /* text styling */
  --font-family: 'Aclonica', sans-serif;

  /* text size */
  --font-size_big: 16px;
  --font-size_medium: 12px;
  --font-size_h1: 30px;
  --font-size_h2: 24px;
  --font-size_h3: 18px;

  /* media max-width 750px configuration */
  --font-size_h1-small: 24px;
  --font-size_h2-small: 20px;
  --font-size_h3-small: 16px;

  /* text thickness */
  --font-weight_normal: 400;
  --font-weight_bold: 700;

  /* line vertical distance */
  --line-height: 1.6;

  /* text padding */
  /* the padding prefix is big as much as the value is big */
  --padding_1: 5px;
  --padding_2: 10px;
  --padding_3: 15px;
  --padding_4: 20px;
  --padding_5: 25px;
  --padding_6: 75px;
}


html,
body,
.page {
  height: 100%; /* needed for proper layout */
  margin: auto 0;
}

header {
  background-color: var(--navbar-bg-color);
  flex: 0 0 auto;
  font-size: var(--font-size_big);
}

body {
  font-family: var(--font-family);
  font-weight: var(--font-weight_normal);
  font-size: var(--font-size_medium);
  /* Sets the font size to 16px */
  line-height: var(--line-height);
  /* Sets the line-height to 1.6 */
  background-color: var(--primary-bg-color);
  color: var(--primary-text-color);
  overflow: hidden;
}

.page {
  display: flex;
  flex-direction: column;
}

.page-header {
  display: flex;
  flex: 0 0 auto;
  width: 100%;
  padding: var(--padding_1);
  align-items: center;
}

.page-content {
  display: flex;
  flex: 1 1 auto;
  position: relative;/* need this to position inner content */
}

.page-content-center {
  justify-content: center;
}

.page-footer {
  display: inline-block;
  clear: both;
  text-align: center;
  background-color: var(--footer-bg-color);
}

.center {
  display: flex;
  align-items: center;
  height: 500px;
}

main{
  overflow-y: auto;
  padding: var(--padding_4);
}

/* this css comment is needed,
to make sure that we have a padding between <main> part and <footer>;
when ther is an overflow(-y): auto (scrolling option)*/
section::after {
  content: "";
  display: block;
  height: var(--padding_4);
  width: 100%;
}

h1 {
  font-size: var(--font-size_h1);
  font-weight: var(--font-weight_normal);
  line-height: var(--line-height);
  /* Sets the line-height to 1.6 */
}

h2 {
  font-size: var(--font-size_h2);
  font-weight: var(--font-weight_normal);
  line-height: var(--line-height);
  /* Sets the line-height to 1.6 */
}

h3 {
  font-size: var(--font-size_h3);
  font-weight: var(--font-weight_normal);
  line-height: var(--line-height);
  /* Sets the line-height to 1.6 */
}

/* to push the text inside the page (used in about page) */
.text-inline {
  padding-left: var(--padding_5);
}

.text-center {
  text-align: center;
}

/* distance between text elements (about page) */
.text-distance-1 {
  padding-top: var(--padding_5);
}

.text-distance-2 {
  padding-top: var(--padding_6);
}

/* table styling comments (order, distance, etc.) */
.tablestyle-distance {
  padding-top: var(--padding_5);
  padding-left: var(--padding_2);
}

th {
  text-align: left;
  border-bottom: 2px solid #000;
}

/* page styling */
.page-header__item {
  flex: 0 1 50px;
}

.page-header img {
  width: 110px;
  height: 110px;
  border-radius: 50%;
}

.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}

.navigation-list {
  list-style-type: none;
}

.navigation-list__item {
  display: inline-block;
  margin-left: 15px;
  padding: var(--padding_1);
}

.navigation-list__item--active {
  text-decoration: none;
  color: var(--navbar-link-active-color);
}

/* start link styling */
.contact_color {
  color: var(--primary-link-color);
}

a {
  color: var(--secondary-link-color_1);
}


a:hover, a:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
}

a:active {
  /* selected link */
  color: var(--link-active-color);
}
/* end link styling */

/* start butten styling */
.button, button {
  /* overwrites browser defaults and resets the border */
  border: none;
  display: inline-block;
  /* takes the font from the outer container */
  font-family: inherit;
  /* styles the background color, font color, and text decoration (underline, etc.) of the button */
  background-color: var(--button_1-bg-color);
  color: var(--button_1-text-color);
  text-decoration: none;
  /*adds spacing to the button (this will be discussed more in-depth later) */
  padding: var(--padding_2);
  border-radius: 3px;
  /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition: 0.8s opacity, 0.8s background-color;
}

button:hover,
button:focus,
.button:hover,
.button:focus {
  /* invert button clor */
  background-color: var(--button_1-text-color);
  color: var(--button_1-bg-color);
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  opacity: 0.8;
}

.button-yellow {
  background-color: var(--button_2-bg-color);
  color: var(--button_2-text-color);
}

.button-yellow:hover,
.button-yellow:focus {
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  background-color: var(--button_2-text-color);
  color: var(--button_2-bg-color);
  opacity: 0.8;
}
/* end butten styling */

/* start image styling */
.profile {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--padding_1);
}

.profile__portrait {
  margin-right: 50px;
  width: 200px;
  height: auto;
  border-radius: 50%;
}
/* end image styling */

/* start item styling */
.project a {
  color: var(--primary-link-color);
}
/* end item styling */

/* start grid fallback ->THIS IS ONE TERM! */
.project__item {
  display: inline-block;
  width: 33%;
  background-color: var(--project-bg-color);
  padding: var(--padding_3);
  width: auto;
  min-height: auto;
  margin: 0;
}
/* end grid fallback */
/* start grid syling */
@supports (display: grid) {
  .project {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    /* grid-template-rows: 300px 300px; row will be adjusted automaticly */
    grid-gap: 20px;/* Distance between items */
    margin: 0;
  }
  .project__item:last-child {
    grid-column: 3 / 3;
    grid-row: 1 / 3;
  }
}
/* END OF THE TERM */

/* start media support*/
/* if the browser window is less than 500px (eg. phones or tablets) just 1fr shall be used */
@media all and (max-width: 500px) {
  @supports (display: grid) {
    .project {
      grid-template-columns: 1fr;
    }
  }
  svg{
    width: 250px;
    height: auto;
  }
  .profile__portrait {
    margin: 0;
    width: 140px;
    height: auto;
  }
  .profile {
    flex-direction: column
  }
  .media-center{
    text-align: center;
  }
}
/* if the browser window is between 500px and 750px (eg. phones or tablets) just 2fr shall be used */
@media all and (min-width: 500px) and (max-width: 750px){
  @supports (display: grid) {
    .project {
      grid-template-columns: 1fr 1fr;
    }
  }
  svg{
    width: 500px;
    height: auto;
  }
  .profile__portrait {
    margin-left: 10px;
    width: 180px;
    height: auto;
  }
}

/* common proprieties for medias 0 to 750px */
@media all and (max-width: 750px) {
  @supports (display: grid) {
    .project {
      grid-gap: 10px;
    }
    .project__item:last-child {
      grid-column: auto / auto;
      grid-row: auto / auto;
    }
  }
  h1 {
    font-size: var(--font-size_h1-small);
  }
  h2 {
    font-size: var(--font-size_h2-small);
  }
  h3 {
    font-size: var(--font-size_h3-small);
  }
}
/* end media support */
/* end grid styling */

/* start Animation styling */
/* for an animation is always needed: first: a @keyframes and second: a class! */
@keyframes color-change-sun {
  0% {
    fill: var(--img-color-1);
    transform: rotate( 4deg);
  }
  50% {
    fill: var(--img-color-2);
  }
  100% {
    fill: var(--img-color-3);
  }
}

@keyframes color-change-tower {
  0% {
    fill: var(--img-color-1);
  }
  50% {
    fill: var(--img-color-2);
  }
  100% {
    fill: var(--img-color-3);
  }
}

@keyframes color-change-center-quadria {
  0% {
    fill: var(--img-color-1);
  }
  50% {
    fill: var(--img-color-2);
  }
  100% {
    fill: var(--img-color-3);
  }
}

/* moving anination */
@keyframes cloud-move {
  from {
    transform: translate(0, 10px);
  }
  to {
    transform: translate(200px, 50px);
  }
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }
  to {
    transform: translate(100px, 48px);
  }
}

.sun, .sun-shine {
  /* this is the long therm */
  animation-duration: 5s;
  animation-name: color-change-sun;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  /* possible values: ease, ease-in, ease-out, linear */
  animation-timing-function: linear;
}

.tower {
  /* this is the shortcut */
  animation: 6s color-change-tower infinite alternate linear;
}

.center-quadria {
  animation: 5.5s color-change-center-quadria infinite alternate ease-out;
}

.cloud-front {
  animation: 30s cloud-move infinite alternate linear;
}

.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}
/* start Animation styling */
